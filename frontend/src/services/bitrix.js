// Bitrix24 CRM Integration Service

class BitrixService {
  constructor() {
    // URL –ø–æ—Ä—Ç–∞–ª–∞ –ë–∏—Ç—Ä–∏–∫—Å24
    this.portalUrl = "https://b24-bvtv4z.bitrix24.ru";
    // Webhook URL –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–ù–û–í–´–ô –≤–µ–±—Ö—É–∫)
    this.webhookUrl =
      "https://b24-bvtv4z.bitrix24.ru/rest/1/bal8wrv83oix1jg9/crm.lead.add";
  }

  async sendLead(leadData) {
    try {
      console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –ª–∏–¥–∞ –≤ –ë–∏—Ç—Ä–∏–∫—Å24:", leadData);

      // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è GET –∑–∞–ø—Ä–æ—Å–∞
      const params = new URLSearchParams({
        "fields[TITLE]": leadData.title,
        "fields[NAME]": leadData.name,
        "fields[PHONE][0][VALUE]": leadData.phone,
        "fields[PHONE][0][VALUE_TYPE]": "WORK",
        "fields[EMAIL][0][VALUE]": leadData.email,
        "fields[EMAIL][0][VALUE_TYPE]": "WORK",
        "fields[COMMENTS]": leadData.comments,
        "fields[SOURCE_ID]": "WEB",
        "fields[SOURCE_DESCRIPTION]": leadData.source || "–°–∞–π—Ç –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏",
      });

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET –∑–∞–ø—Ä–æ—Å (–ë–∏—Ç—Ä–∏–∫—Å24 REST API –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç GET)
      const response = await fetch(`${this.webhookUrl}?${params.toString()}`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      console.log("‚úÖ –õ–∏–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ –ë–∏—Ç—Ä–∏–∫—Å24:", result);

      return {
        success: true,
        leadId: result.result,
        data: result,
      };
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –ë–∏—Ç—Ä–∏–∫—Å24:", error);

      return {
        success: false,
        error: error.message,
        details: error,
      };
    }
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
  formatComment(formData) {
    let comment = "";

    if (formData.message) {
      comment += `–°–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞: ${formData.message}\n\n`;
    }

    comment += "--- –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –û–ë–™–ï–ö–¢–ï ---\n";
    comment += `–û–±—ä–µ–∫—Ç: ${formData.propertyName}\n`;
    comment += `–¶–µ–Ω–∞: ${formData.propertyPrice}\n`;
    comment += `–ó–∞—Å—Ç—Ä–æ–π—â–∏–∫: ${formData.propertyDeveloper}\n`;
    comment += `–ü—Ä–æ–µ–∫—Ç: ${formData.propertyProject}\n`;
    comment += `–ò—Å—Ç–æ—á–Ω–∏–∫: ${formData.source}\n`;
    comment += `–í—Ä–µ–º—è –∑–∞—è–≤–∫–∏: ${formData.timestamp}`;

    return comment;
  }
}

export default new BitrixService();
